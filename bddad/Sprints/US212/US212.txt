CREATE OR REPLACE FUNCTION get_n_member(n INTEGER) 
RETURN varchar
AS
    values_sensor varchar(25);
BEGIN 
    SELECT input_string INTO values_sensor
    FROM (
        SELECT input_string, ROW_NUMBER() OVER (ORDER BY input_string) AS row_num
        FROM input_sensor
    ) 
    WHERE row_num = n;
    RETURN values_sensor;
END;

Begin
DBMS_OUTPUT.PUT_LINE(get_n_member(1));
End;


CREATE OR REPLACE PROCEDURE insert_values
AS
    str input_sensor.input_string%type;
    str1 input_sensor.input_string%type;
    str2 input_sensor.input_string%type;
    str3 input_sensor.input_string%type;
    str4 input_sensor.input_string%type;
    str5 input_sensor.input_string%type;
    num1 number(5) := 0;
    num3 number(3) := 0;
    num4 number(10):= 0;
    ts timestamp;
    num_erros number(3) := 0;
    num_lidos number(3) := 0;
    num_registados number(3) := 0;
    data_execucao timestamp;
    Cursor sensor IS
    SELECT input_string
    FROM input_sensor;
BEGIN
    OPEN sensor;
    LOOP
        FETCH sensor INTO str;
        EXIT WHEN sensor%NOTFOUND;
        str1 := SUBSTR(str, 1, 5);
        str2 := SUBSTR(str, 6, 2);
        str3 := SUBSTR(str, 8, 3);
        str4 := SUBSTR(str, 11, 10);
        str5 := SUBSTR(str, 21, 5);
        num1 := TO_NUMBER(str1);
        num3 := TO_NUMBER(str3);
        num4 := TO_NUMBER(str4);
        ts := TO_TIMESTAMP(str5, 'HH24:mi');
        if Length(str)!=25 then
            num_erros :=num_erros+1;
        else
            if Length(num1)!=5 And str2!= 'HS 'and str2!= 'Pl' and str2!= 'TS' and str2!= 'VV' and str2!= 'TA' and str2!= 'HA' and str2!= 'PA' and num3<=0 and num3>=100 then
                num_erros :=num_erros+1;
            else 
                num_registados := num_registados +1;
                    INSERT INTO dados_recolhidos VALUES(num1, str2, num3, num4, ts,30);
                         DELETE FROM input_sensor inp WHERE inp.input_string = str;    
                            DBMS_OUTPUT.PUT_LINE(num1 || '  ' || str2 || '  ' || num3 || '   ' || num4 || '   ' || ts || '   '|| str);
            end if;
        end if;
        num_lidos:=num_lidos+1;
    END LOOP;
    CLOSE sensor;
    data_execucao:=systimestamp;
    INSERT INTO processo_leitura VALUES(data_execucao, num_lidos, num_registados, num_erros);
    DBMS_OUTPUT.PUT_LINE('Lidos: '||num_lidos || ' Registados: ' || num_registados || ' Erros: ' || num_erros || ' Data: '|| data_execucao);
END;

Call insert_values;
SELECT * FROM dados_recolhidos;
SELECT * FROM input_sensor;
SELECT * FROM processo_leitura;



select id_tempo from tempo where ano in (2018, 2020);

select * from data_warehouse where Tempoid_tempo in (select id_tempo from tempo where ano in (2018, 2020));